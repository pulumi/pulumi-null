{
    "name": "null",
    "displayName": "Null",
    "description": "A Pulumi package for creating and managing Null cloud resources.",
    "keywords": [
        "pulumi",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com/",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`null` Terraform Provider](https://github.com/terraform-providers/terraform-provider-null).",
    "repository": "https://github.com/pulumi/pulumi-null",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-null/sdk/go/null",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing Null cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-null)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-null` repo](https://github.com/pulumi/pulumi-null/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-null` repo](https://github.com/terraform-providers/terraform-provider-null/issues).",
            "devDependencies": {
                "@types/node": "^16.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-null)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-null` repo](https://github.com/pulumi/pulumi-null/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-null` repo](https://github.com/terraform-providers/terraform-provider-null/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {},
    "provider": {
        "description": "The provider type for the null package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "null:index/resource:Resource": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as _null from \"@pulumi/null\";\nimport * as aws from \"@pulumi/aws\";\nimport * as std from \"@pulumi/std\";\n\nconst cluster: aws.index.Instance[] = [];\nfor (const range = {value: 0}; range.value \u003c 3; range.value++) {\n    cluster.push(new aws.index.Instance(`cluster-${range.value}`, {\n        ami: \"ami-0dcc1e21636832c5d\",\n        instanceType: \"m5.large\",\n    }));\n}\n// The primary use-case for the null resource is as a do-nothing container\n// for arbitrary actions taken by a provisioner.\n//\n// In this example, three EC2 instances are created and then a\n// null_resource instance is used to gather data about all three\n// and execute a single action that affects them all. Due to the triggers\n// map, the null_resource will be replaced each time the instance ids\n// change, and thus the remote-exec provisioner will be re-run.\nconst clusterResource = new _null.Resource(\"cluster\", {triggers: {\n    cluster_instance_ids: std.join({\n        separator: \",\",\n        input: cluster.map(__item =\u003e __item.id),\n    }).then(invoke =\u003e invoke.result),\n}});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_null as null\nimport pulumi_std as std\n\ncluster = []\nfor range in [{\"value\": i} for i in range(0, 3)]:\n    cluster.append(aws.index.Instance(f\"cluster-{range['value']}\",\n        ami=ami-0dcc1e21636832c5d,\n        instance_type=m5.large))\n# The primary use-case for the null resource is as a do-nothing container\n# for arbitrary actions taken by a provisioner.\n#\n# In this example, three EC2 instances are created and then a\n# null_resource instance is used to gather data about all three\n# and execute a single action that affects them all. Due to the triggers\n# map, the null_resource will be replaced each time the instance ids\n# change, and thus the remote-exec provisioner will be re-run.\ncluster_resource = null.Resource(\"cluster\", triggers={\n    \"cluster_instance_ids\": std.join(separator=\",\",\n        input=[__item[\"id\"] for __item in cluster]).result,\n})\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Null = Pulumi.Null;\nusing Std = Pulumi.Std;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cluster = new List\u003cAws.Index.Instance\u003e();\n    for (var rangeIndex = 0; rangeIndex \u003c 3; rangeIndex++)\n    {\n        var range = new { Value = rangeIndex };\n        cluster.Add(new Aws.Index.Instance($\"cluster-{range.Value}\", new()\n        {\n            Ami = \"ami-0dcc1e21636832c5d\",\n            InstanceType = \"m5.large\",\n        }));\n    }\n    // The primary use-case for the null resource is as a do-nothing container\n    // for arbitrary actions taken by a provisioner.\n    //\n    // In this example, three EC2 instances are created and then a\n    // null_resource instance is used to gather data about all three\n    // and execute a single action that affects them all. Due to the triggers\n    // map, the null_resource will be replaced each time the instance ids\n    // change, and thus the remote-exec provisioner will be re-run.\n    var clusterResource = new Null.Resource(\"cluster\", new()\n    {\n        Triggers = \n        {\n            { \"cluster_instance_ids\", Std.Join.Invoke(new()\n            {\n                Separator = \",\",\n                Input = cluster.Select(__item =\u003e __item.Id).ToList(),\n            }).Apply(invoke =\u003e invoke.Result) },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/go/aws\"\n\t\"github.com/pulumi/pulumi-null/sdk/go/null\"\n\t\"github.com/pulumi/pulumi-std/sdk/go/std\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\nfunc main() {\npulumi.Run(func(ctx *pulumi.Context) error {\nvar cluster []*aws.Instance\nfor index := 0; index \u003c 3; index++ {\n    key0 := index\n    _ := index\n__res, err := aws.NewInstance(ctx, fmt.Sprintf(\"cluster-%v\", key0), \u0026aws.InstanceArgs{\nAmi: \"ami-0dcc1e21636832c5d\",\nInstanceType: \"m5.large\",\n})\nif err != nil {\nreturn err\n}\ncluster = append(cluster, __res)\n}\ninvokeJoin, err := std.Join(ctx, \u0026std.JoinArgs{\nSeparator: \",\",\nInput: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ example.pp:22,19-32),\n}, nil)\nif err != nil {\nreturn err\n}\n// The primary use-case for the null resource is as a do-nothing container\n// for arbitrary actions taken by a provisioner.\n//\n// In this example, three EC2 instances are created and then a\n// null_resource instance is used to gather data about all three\n// and execute a single action that affects them all. Due to the triggers\n// map, the null_resource will be replaced each time the instance ids\n// change, and thus the remote-exec provisioner will be re-run.\n_, err = null.NewResource(ctx, \"cluster\", \u0026null.ResourceArgs{\nTriggers: pulumi.StringMap{\n\"cluster_instance_ids\": pulumi.String(invokeJoin.Result),\n},\n})\nif err != nil {\nreturn err\n}\nreturn nil\n})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.instance;\nimport com.pulumi.aws.instanceArgs;\nimport com.pulumi.null.Resource;\nimport com.pulumi.null.ResourceArgs;\nimport com.pulumi.std.StdFunctions;\nimport com.pulumi.std.inputs.JoinArgs;\nimport com.pulumi.codegen.internal.KeyedValue;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        for (var i = 0; i \u003c 3; i++) {\n            new Instance(\"cluster-\" + i, InstanceArgs.builder()\n                .ami(\"ami-0dcc1e21636832c5d\")\n                .instanceType(\"m5.large\")\n                .build());\n\n        \n}\n        // The primary use-case for the null resource is as a do-nothing container\n        // for arbitrary actions taken by a provisioner.\n        //\n        // In this example, three EC2 instances are created and then a\n        // null_resource instance is used to gather data about all three\n        // and execute a single action that affects them all. Due to the triggers\n        // map, the null_resource will be replaced each time the instance ids\n        // change, and thus the remote-exec provisioner will be re-run.\n        var clusterResource = new Resource(\"clusterResource\", ResourceArgs.builder()\n            .triggers(Map.of(\"cluster_instance_ids\", StdFunctions.join(JoinArgs.builder()\n                .separator(\",\")\n                .input(cluster.stream().map(element -\u003e element.id()).collect(toList()))\n                .build()).result()))\n            .build());\n\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "triggers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of arbitrary strings that, when changed, will force the null resource to be replaced, re-running any associated provisioners.\n"
                }
            },
            "inputProperties": {
                "triggers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of arbitrary strings that, when changed, will force the null resource to be replaced, re-running any associated provisioners.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Resource resources.\n",
                "properties": {
                    "triggers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of arbitrary strings that, when changed, will force the null resource to be replaced, re-running any associated provisioners.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "null:index/getDataSource:getDataSource": {
            "description": "## Example Usage\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDataSource.\n",
                "properties": {
                    "hasComputedDefault": {
                        "type": "string",
                        "description": "If set, its literal value will be stored and returned. If not, its value defaults to `\"default\"`. This argument exists primarily for testing and has little practical use.\n"
                    },
                    "inputs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of arbitrary strings that is copied into the `outputs` attribute, and accessible directly for interpolation.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDataSource.\n",
                "properties": {
                    "hasComputedDefault": {
                        "description": "If set, its literal value will be stored and returned. If not, its value defaults to `\"default\"`. This argument exists primarily for testing and has little practical use.\n",
                        "type": "string"
                    },
                    "id": {
                        "deprecationMessage": "This attribute is only present for some legacy compatibility issues and should not be used. It will be removed in a future version.",
                        "description": "This attribute is only present for some legacy compatibility issues and should not be used. It will be removed in a future version.\n",
                        "type": "string"
                    },
                    "inputs": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of arbitrary strings that is copied into the `outputs` attribute, and accessible directly for interpolation.\n",
                        "type": "object"
                    },
                    "outputs": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "After the data source is \"read\", a copy of the `inputs` map.\n",
                        "type": "object"
                    },
                    "random": {
                        "type": "string"
                    }
                },
                "required": [
                    "hasComputedDefault",
                    "id",
                    "outputs",
                    "random"
                ],
                "type": "object"
            }
        }
    }
}